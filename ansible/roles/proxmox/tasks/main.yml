---
- name: Remove pve-enterprise.list file
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/apt/sources.list.d/pve-enterprise.list

- name: Install apt packages
  apt:
    update_cache: yes
    pkg:
      - git
      - zip
      - unzip
      - vim
      - curl
      - unzip

- name: Check existence of default ssh priv key
  stat:
    path: ~/.ssh/id_rsa
  register: ssh_priv_key

- name: Clone dotfiles
  ansible.builtin.git:
    repo: git@github.com:zhangtai/dotfiles.git
    dest: /root/.dotfiles
    accept_hostkey: yes
  when: ssh_priv_key.stat.exists

- name: Create a symbolic link
  ansible.builtin.file:
    src: /root/.dotfiles/.zshrc
    dest: /root/.zshrc
    owner: root
    group: root
    state: link

- name: Generate ssh keys
  shell: ssh-keygen -q -t rsa -b 4096 -N '' -f ~/.ssh/id_rsa
  when: not ssh_priv_key.stat.exists

- name: Check existence of ubuntu cloud image
  stat:
    path: "{{ ubuntu_cloud_image_path }}"
  register: ubuntu_cloud_image

- name: Download focal-server-cloudimg-amd64.img
  get_url:
    url: "{{ ubuntu_cloudimg_link }}"
    dest: "{{ ubuntu_cloud_image_path }}"
  when: not ubuntu_cloud_image.stat.exists or force_download_cloudimg

- name: Verify if stage 0 template exists
  shell: 'qm status {{ ubuntu_2004_stage_0_id }}'
  register: vm_id_exists
  ignore_errors: yes

- name: Create stage 0 template from cloud-image
  ansible.builtin.include_tasks: create_stage_0_image.yml
  when: vm_id_exists.rc == 2 or force_create_stage_0

- name: Check if stage 1 template exists
  ansible.builtin.shell: qm status {{ ubuntu_2004_stage_1_id }}
  register: ci_template_exists
  ignore_errors: yes

- name: Create stage 1 template
  ansible.builtin.include_tasks: create_stage_1_image.yml
  when: ci_template_exists.rc == 2

- name: Setup cloudflare source and install cloudflared
  ansible.builtin.include_tasks: install_cloudflared.yml
